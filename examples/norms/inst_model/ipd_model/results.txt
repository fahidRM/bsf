Answer: 1
player(player) player(virtual_character) agent(jason) true evtype(enull,ex) ifluent(live(ipd)) inst(ipd) instant(t0) next(t0,t1) instant(t1) next(t1,t2) instant(t2) final(t2) observed(createIPD,t0) observed(newArrival(jason,normal),t1) before(t1,t2) before(t0,t1) before(t0,t2) evtype(detected(virtual_character),ex) evtype(detected(player),ex) evtype(viol(detected(virtual_character)),viol) evtype(viol(detected(player)),viol) evtype(avoidCollision(jason,virtual_character),ex) evtype(avoidCollision(jason,player),ex) evtype(viol(avoidCollision(jason,virtual_character)),viol) evtype(viol(avoidCollision(jason,player)),viol) evtype(deadline,ex) evtype(viol(deadline),viol) evtype(greet(jason,virtual_character),ex) evtype(greet(jason,player),ex) evtype(viol(greet(jason,virtual_character)),viol) evtype(viol(greet(jason,player)),viol) evtype(intDetected(virtual_character),inst) evtype(intDetected(player),inst) evtype(viol(intDetected(virtual_character)),viol) evtype(viol(intDetected(player)),viol) evtype(violpoliteness(jason),viol) evtype(createIPD,ex) evtype(viol(createIPD),viol) observed(enull,t1) occurred(enull,t1) occurred(createIPD,t0) evinst(detected(virtual_character),ipd) evinst(detected(player),ipd) evinst(viol(detected(virtual_character)),ipd) evinst(viol(detected(player)),ipd) evinst(avoidCollision(jason,virtual_character),ipd) evinst(avoidCollision(jason,player),ipd) evinst(viol(avoidCollision(jason,virtual_character)),ipd) evinst(viol(avoidCollision(jason,player)),ipd) evinst(deadline,ipd) evinst(viol(deadline),ipd) evinst(greet(jason,virtual_character),ipd) evinst(greet(jason,player),ipd) evinst(viol(greet(jason,virtual_character)),ipd) evinst(viol(greet(jason,player)),ipd) evinst(intDetected(virtual_character),ipd) evinst(intDetected(player),ipd) evinst(viol(intDetected(virtual_character)),ipd) evinst(viol(intDetected(player)),ipd) evinst(violpoliteness(jason),ipd) evinst(createIPD,ipd) evinst(viol(createIPD),ipd) event(detected(virtual_character)) event(detected(player)) event(viol(detected(virtual_character))) event(viol(detected(player))) event(avoidCollision(jason,virtual_character)) event(avoidCollision(jason,player)) event(viol(avoidCollision(jason,virtual_character))) event(viol(avoidCollision(jason,player))) event(deadline) event(viol(deadline)) event(greet(jason,virtual_character)) event(greet(jason,player)) event(viol(greet(jason,virtual_character))) event(viol(greet(jason,player))) event(intDetected(virtual_character)) event(intDetected(player)) event(viol(intDetected(virtual_character))) event(viol(intDetected(player))) event(violpoliteness(jason)) event(createIPD) event(viol(createIPD)) ifluent(perm(detected(virtual_character))) ifluent(perm(detected(player))) ifluent(perm(avoidCollision(jason,virtual_character))) ifluent(perm(avoidCollision(jason,player))) ifluent(perm(deadline)) ifluent(perm(greet(jason,virtual_character))) ifluent(perm(greet(jason,player))) ifluent(pow(ipd,intDetected(virtual_character))) ifluent(pow(ipd,intDetected(player))) ifluent(perm(intDetected(virtual_character))) ifluent(perm(intDetected(player))) ifluent(perm(createIPD)) ifluent(friends(jason,virtual_character)) ifluent(friends(jason,player)) oblfluent(obl(greet(jason,virtual_character),deadline,violpoliteness(jason))) oblfluent(obl(greet(jason,player),deadline,violpoliteness(jason))) oblfluent(obl(avoidCollision(jason,virtual_character),deadline,violpoliteness(jason))) oblfluent(obl(avoidCollision(jason,player),deadline,violpoliteness(jason))) holdsat(highIPD(jason,virtual_character),t2) holdsat(highIPD(jason,virtual_character),t1) holdsat(highIPD(jason,virtual_character),t0) holdsat(highIPD(jason,player),t2) holdsat(highIPD(jason,player),t1) holdsat(highIPD(jason,player),t0) terminated(highIPD(jason,player),t0) holdsat(live(ipd),t1) terminated(highIPD(jason,virtual_character),t0) initiated(live(ipd),t0) holdsat(live(ipd),t2) holdsat(perm(detected(player)),t1) holdsat(perm(detected(virtual_character)),t1) initiated(perm(detected(virtual_character)),t0) initiated(perm(detected(player)),t0) holdsat(perm(detected(player)),t2) holdsat(perm(detected(virtual_character)),t2) initiated(perm(intDetected(virtual_character)),t0) initiated(perm(intDetected(player)),t0) holdsat(perm(intDetected(player)),t1) holdsat(perm(intDetected(player)),t2) holdsat(perm(intDetected(virtual_character)),t1) holdsat(perm(intDetected(virtual_character)),t2) initiated(pow(ipd,intDetected(virtual_character)),t0) initiated(pow(ipd,intDetected(player)),t0) holdsat(pow(ipd,intDetected(player)),t1) holdsat(pow(ipd,intDetected(player)),t2) holdsat(pow(ipd,intDetected(virtual_character)),t1) holdsat(pow(ipd,intDetected(virtual_character)),t2) obs(t1) obs(t0) nifluent(lowIPD(jason,virtual_character)) nifluent(lowIPD(jason,player)) nifluent(highIPD(jason,virtual_character)) nifluent(highIPD(jason,player)) 
SATISFIABLE

Models      : 1     
Time        : 0.000
  Prepare   : 0.000
  Prepro.   : 0.000
  Solving   : 0.000
